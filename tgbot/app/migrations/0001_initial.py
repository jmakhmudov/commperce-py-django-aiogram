# Generated by Django 4.2.1 on 2023-08-02 21:36

import app.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='Название группы')),
                ('tgid', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
                'db_table': 'groups',
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base', models.BooleanField(default=False, verbose_name='Настройки по умолчанию')),
                ('name', models.CharField(max_length=220, verbose_name='Название настроек')),
                ('include_url', models.BooleanField(default=True, verbose_name='Включить фильтрацию по ссылкам')),
                ('include_length', models.BooleanField(default=True, verbose_name='Включить фильтрацию по длине')),
                ('include_shitword', models.BooleanField(default=True, verbose_name='Включить фильтрацию матов')),
                ('wait_time', models.IntegerField(default=60, verbose_name='Время ожидания (в секундах)')),
                ('max_length', models.IntegerField(default=500, verbose_name='Максимальная разрешенная длина сообщения')),
                ('shitwords', models.TextField(blank=True, null=True, verbose_name='Маты через запятую')),
                ('text_shitword', models.TextField(blank=True, null=True, verbose_name='Текст (маты)')),
                ('text_length', models.TextField(blank=True, null=True, verbose_name='Текст (превышение длины)')),
                ('text_url', models.TextField(blank=True, null=True, verbose_name='Текст (ссылка)')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='app.group')),
            ],
            options={
                'verbose_name': 'Настройки',
                'verbose_name_plural': 'Настройки',
                'db_table': 'settings',
            },
        ),
        migrations.CreateModel(
            name='AddPublication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(help_text='\n<pre><xmp><b>жирный</b>, <strong>жирный</strong>\n<i>курсив</i>, <em>курсив</em>\n<u>подчеркнутый</u>, <ins>подчеркнутый</ins>\n<s>зачеркнутый</s>, \n<strike>зачеркнутый</strike>, \n<del>зачеркнутый</del>\n<tg-spoiler>скрытый текст, на который надо нажать, чтобы он отобразился</tg-spoiler>\n<span class="tg-spoiler">скрытый текст, на который надо нажать, чтобы он отобразился</span>\n<b>жирный<i>курсив жирный <s>курсив жионый зачеркнутый</s> <u>подчеркнутый курсив жирный</u></i> жирный</b>\n<a href="http://www.example.com/">ссылка в тексте</a>\n<a href="tg://user?id=1040628188">Упоминание пользователя с id 1040628188</a></xmp></pre>\n        ', verbose_name='текст публикации')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('publ_at', models.DateTimeField(verbose_name='дата и время публикации')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publications', to='app.group', verbose_name='группа')),
            ],
            options={
                'verbose_name': 'Запланированная публикация',
                'verbose_name_plural': 'Запланированные публикации',
                'db_table': 'publications',
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Уникальное имя')),
                ('tgid', models.CharField(max_length=50, unique=True, verbose_name='Свой уникальный id в телеграм')),
                ('is_staff', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Администратор',
                'verbose_name_plural': 'Администраторы',
                'db_table': 'admins',
            },
            managers=[
                ('objects', app.models.CustomAdminManager()),
            ],
        ),
    ]
